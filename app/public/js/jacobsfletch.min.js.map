{"version":3,"sources":["project.js"],"names":["touchStartHandler","event","touchStart","touches","pageY","scrollHandler","scrollDistance","deltaY","preventDefault","window","addEventListener","scrollEnabler","element","elementCurrentScroll","scrollTop","elementScrollHeight","scrollHeight","elementClientHeight","clientHeight","fullBodyScroll","scrollAnimate","screen","scrollAnimation","panelCurrentScroll","panelBody","panelIsFullyScrolledUp","expectedScroll","exploreTop","originalExploreTop","explore","style","top","currentRatio","Math","round","start","opacity","checked","app","classList","add","barTitleSpan","innerHTML","barSubtitleSpan","remove","originalTitleSpan","originalSubtitleSpan","document","querySelector","panelScroll","fetchVariables","exploreBoundingTop","getBoundingClientRect","screenBoundingTop","removeAttribute","lightSwitch","appFooter","appBody","toggle","responsiveImages","cardName","dppi","devicePixelRatio","cards","getElementsByClassName","status","currentImg","prevImgWidth","scrollContainer","scrollPosition","finish","cardImg","setTimeout","loadImage","otherCardImgs","imgWidth","ceil","parseInt","getComputedStyle","getPropertyValue","newWidth","dataset","src","imgSrc","srcParse","split","j","length","srcFirst","srcLast","srcType","k","hoverReplicate","i","card","contains","this","queryMedia","toggleMedia","cardParent","otherCards","parentNode","isSameNode","push","otherCardImg","toolExpand","toolShrink","tools","t","tool"],"mappings":"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","file":"jacobsfletch.min.js","sourcesContent":["////////////////////////////////////////////////////////////////////////////\n\n// scrollController\n\n////////////////////////////////////////////////////////////////////////////\n\npreventDefault = function(event) {\n    event.preventDefault();\n}\n\nwindow.addEventListener('touchmove', preventDefault);\nwindow.addEventListener('wheel', preventDefault);\n\nvar touchStart = 0;\n    scrollDistance = 0;\n\nfunction touchStartHandler(event) {\n    touchStart = event.touches[0].pageY;\n}\n\nfunction scrollHandler(event) {\n    scrollDistance = event.deltaY ? event.deltaY : event.touches ? (touchStart - event.touches[0].pageY) : null;\n    touchStart = event.touches ? event.touches[0].pageY : null;\n}\n\n////////////////////////////////////////////////////////////////////////////\n\n// scrollEnabler\n\n////////////////////////////////////////////////////////////////////////////\n\nscrollEnabler = function(event, element) {\n    var elementCurrentScroll = element.scrollTop;\n        elementScrollHeight = element.scrollHeight;\n        elementClientHeight = element.clientHeight;\n        fullBodyScroll = elementScrollHeight - elementClientHeight;\n    if (elementCurrentScroll <= fullBodyScroll && elementCurrentScroll >= 0) {\n        element.scrollTop = elementCurrentScroll + scrollDistance;\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n\n// scrollAnimate\n\n////////////////////////////////////////////////////////////////////////////\n\nscrollAnimate = function(screen) {\n\n    var app = document.querySelector('.app-main');\n        screen = app.querySelector(screen);\n        start = screen.querySelector('.start');\n        explore = screen.querySelector('.explore');\n        panelBody = explore.querySelector('.panel-body');\n        barTitleSpan = explore.querySelector('.bar-title').querySelector('span');\n        barSubtitleSpan = explore.querySelector('.bar-subtitle').querySelector('span');\n        originalTitleSpan = barTitleSpan.innerHTML;\n        originalSubtitleSpan = barSubtitleSpan.innerHTML;\n        panelScroll = 0;\n        panelIsFullyScrolledUp = true;\n        currentRatio = 0;\n        panelCurrentScroll = 0;\n        checked = false;\n        exploreTop = 0;\n\n    fetchVariables = function() {\n        var exploreBoundingTop = explore.getBoundingClientRect().top;\n            screenBoundingTop = screen.getBoundingClientRect().top;\n            exploreTop = exploreBoundingTop - screenBoundingTop;\n            originalExploreTop = exploreTop;\n    }\n\n    window.addEventListener('resize', function(event) {\n        explore.removeAttribute('style');\n        start.removeAttribute('style');\n        fetchVariables();\n        if (checked == true) {\n            explore.style.top = 0;\n            exploreTop = 0;\n        }\n    });\n\n    screen.addEventListener('wheel', function(event) {\n        scrollHandler(event);\n        scrollAnimation(event);\n    });\n\n    screen.addEventListener('touchmove', function(event) {\n        scrollHandler(event);\n        scrollAnimation(event);\n    });\n\n    screen.addEventListener('touchstart', touchStartHandler);\n\n    function scrollAnimation(event) {\n        panelCurrentScroll = panelBody.scrollTop;\n        panelIsFullyScrolledUp = panelCurrentScroll == 0;\n\n        if (panelIsFullyScrolledUp) {\n            expectedScroll = exploreTop + -scrollDistance;\n            exploreTop = (expectedScroll >= originalExploreTop) ? originalExploreTop : (expectedScroll <= 0) ? 0 : (exploreTop + -scrollDistance);\n            explore.style.top = exploreTop + 'px';\n            currentRatio = Math.round(100 * (exploreTop / originalExploreTop)) / 100;\n            start.style.opacity = currentRatio;\n        }\n\n        if (exploreTop == 0) {\n            checked = true;\n            app.classList.add('activated');\n            barTitleSpan.innerHTML = 'overview';\n            barSubtitleSpan.innerHTML = 'down';\n            scrollEnabler(event, panelBody);\n        } else if (exploreTop == originalExploreTop) {\n            checked = false;\n            app.classList.remove('activated');\n            barTitleSpan.innerHTML = originalTitleSpan;\n            barSubtitleSpan.innerHTML = originalSubtitleSpan;\n        }\n    }\n\n    fetchVariables();\n\n}\n\n////////////////////////////////////////////////////////////////////////////\n\n// dockInit\n\n////////////////////////////////////////////////////////////////////////////\n\nvar app = document.querySelector('.app-main');\n    lightSwitch = app.querySelector('.tool-lightswitch');\n    appFooter = app.querySelector('.app-footer');\n    appBody = app.querySelector('.app-body');\n\nlightSwitch.addEventListener('click', function() {\n    app.classList.toggle('docked');\n    appBody.classList.toggle('hidden');\n    appFooter.classList.toggle('visible');\n    lightSwitch.classList.toggle('switched');\n});\n\n////////////////////////////////////////////////////////////////////////////\n\n// responsiveImages\n\n////////////////////////////////////////////////////////////////////////////\n\nresponsiveImages = function(cardName) {\n    var dppi = window.devicePixelRatio;\n        cards = document.getElementsByClassName(cardName);\n        status = 'all';\n        currentImg = null;\n        prevImgWidth = 0;\n        scrollContainer = document.querySelector('.panel-body');\n        scrollPosition = 0;\n\n    finish = function(cardImg) {\n        setTimeout(function() {\n            cardImg.classList.remove('deactivated');\n        }, 1000)\n    }\n\n    loadImage = function(cardImg, otherCardImgs) {\n        var imgWidth = Math.ceil(parseInt(getComputedStyle(cardImg, null).getPropertyValue('width'), 10));\n        if (imgWidth != prevImgWidth) { // Skip the image transormation if it is the same size as the prior\n            var newWidth = imgWidth * dppi;\n            if (cardImg.dataset.src) {\n                var imgSrc = cardImg.dataset.src;\n                var srcParse = imgSrc.split('upload/');\n                for (var j = 0; j < srcParse.length; j++) {\n                    var srcFirst = srcParse[0];\n                    var srcLast = srcParse[1];\n                    var srcType = srcLast.split('.')[1];\n                    if(srcType === 'jpg') {\n                        var imgSrc = srcFirst + 'upload/w_' + newWidth + '/' + srcLast;\n                    }\n                    cardImg.src = imgSrc;\n                }\n            }\n        } else {\n            finish(cardImg);\n            for (var k = 0; k < otherCardImgs.length; k++) {\n                finish(otherCardImgs[k]);\n            }\n        }\n    }\n\n    hoverReplicate = function() {\n        for (var i = 0; i < cards.length; i++) {\n            var card = cards[i];\n            if(card.classList.contains('hover')) {\n                card.classList.toggle('hover');\n            }\n        }\n        this.classList.toggle('hover');\n    }\n\n    queryMedia = function(cardImg, otherCardImgs) {\n        if (status === 'all') {\n            for (var i = 0; i < cards.length; i++) {\n                var card = cards[i];\n                var cardImg = card.querySelector('img');\n                cardImg.classList.add('deactivated');\n                loadImage(cardImg, otherCardImgs);\n            }\n        } else if (status === 'single') {\n            cardImg.classList.add('deactivated');\n            loadImage(cardImg, otherCardImgs);\n        }\n    }\n\n    toggleMedia = function(card, cardImg, cardParent, otherCards, otherCardImgs) {\n        prevImgWidth = Math.ceil(parseInt(getComputedStyle(cardImg, null).getPropertyValue('width'), 10));\n        if (!cardParent.classList.contains('activated')) {\n            scrollPosition = scrollContainer.scrollTop;\n        }\n        for (var i = 0; i < otherCards.length; i++) {\n            otherCards[i].parentNode.classList.toggle('deactivated');\n            otherCards[i].classList.add('deactivated');\n        }\n        cardParent.classList.toggle('activated');\n        card.querySelector('.tool-shrink').classList.toggle('deactivated');\n        if (status === 'all') {\n            status = 'single';\n            currentImg = cardImg;\n        } else if (status === 'single') {\n            status = 'all';\n            currentImg = null;\n        }\n        for (var k = 0; k < otherCardImgs.length; k++) {\n            otherCardImgs[k].classList.add('deactivated');\n        }\n        if (!cardParent.classList.contains('activated')) {\n            scrollContainer.scrollTop = scrollPosition;\n        } else {\n            scrollContainer.scrollTop = 0;\n        }\n        queryMedia(cardImg, otherCardImgs);\n    }\n\n    for (var i = 0; i < cards.length; i++) {\n        (function() {\n            var card = cards[i];\n            var otherCards = [];\n            var otherCardImgs = [];\n            for (var j = 0; j < cards.length; j++) {\n                if (!cards[j].isSameNode(card)) {\n                    otherCards.push(cards[j]);\n                    var otherCardImg = cards[j].querySelector('img');\n                    if (otherCardImg) {\n                        otherCardImgs.push(otherCardImg);\n                    }\n                }\n            }\n            var cardImg = card.querySelector('img');\n            var cardParent = card.parentNode;\n            var toolExpand = card.querySelector('.tool-expand');\n            var toolShrink = card.querySelector('.tool-shrink');\n            var tools = [];\n            if (toolExpand && toolShrink) {\n                tools.push(toolExpand, toolShrink);\n            }\n            if (cardImg) {\n                cardImg.addEventListener('load', function() {\n                    finish(cardImg);\n                    for (var k = 0; k < otherCardImgs.length; k++) {\n                        finish(otherCardImgs[k]);\n                    }\n                });\n            }\n            card.addEventListener('touchstart', hoverReplicate);\n            if (tools) {\n                for(var t = 0; t < tools.length; t++) {\n                    var tool = tools[t];\n                    tool.addEventListener('click', function() {\n                        toggleMedia(card, cardImg, cardParent, otherCards, otherCardImgs);\n                    });\n                }\n            }\n        })();\n    }\n\n    window.addEventListener('resize', function() {\n        queryMedia(currentImg);\n    });\n\n    queryMedia(status);\n}\n"]}