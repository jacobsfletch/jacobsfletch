{"version":3,"sources":["project.js"],"names":["touchStartHandler","event","touchStart","touches","pageY","scrollHandler","scrollDistance","deltaY","preventDefault","window","addEventListener","scrollEnabler","element","elementCurrentScroll","scrollTop","elementScrollHeight","scrollHeight","elementClientHeight","clientHeight","fullBodyScroll","scrollAnimate","screen","scrollAnimation","measureIndex","style","top","currentRatio","panelCurrentScroll","panelBody","panelIsFullyScrolledUp","expectedScroll","exploreTop","originalExploreTop","explore","Math","round","start","opacity","checked","app","classList","add","barTitleSpan","innerHTML","barSubtitleSpan","currentScroll","measureIndexB","remove","originalTitleSpan","originalSubtitleSpan","document","querySelector","panelScroll","fetchVariables","exploreBoundingTop","getBoundingClientRect","screenBoundingTop","removeAttribute","dockToggler","tools","querySelectorAll","dock","currentSwatch","undefined","toolsArray","previous","docked","swatches","swatch","i","length","tool","this","isSameNode","previousSwatch","k","responsiveImages","cardName","dppi","devicePixelRatio","cards","getElementsByClassName","status","currentImg","prevImgWidth","scrollContainer","scrollPosition","finish","cardImg","setTimeout","loadImage","otherCardImgs","imgWidth","ceil","parseInt","getComputedStyle","getPropertyValue","newWidth","dataset","src","imgSrc","srcParse","split","j","srcFirst","srcLast","srcType","hoverReplicate","card","contains","toggle","queryMedia","toggleMedia","cardParent","otherCards","parentNode","push","otherCardImg","toolExpand","toolShrink","t"],"mappings":"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","file":"jacobsfletch.min.js","sourcesContent":["////////////////////////////////////////////////////////////////////////////\n\n// scrollController\n\n////////////////////////////////////////////////////////////////////////////\n\npreventDefault = function(event) {\n    event.preventDefault();\n}\n\nwindow.addEventListener('touchmove', preventDefault);\nwindow.addEventListener('wheel', preventDefault);\n\nvar touchStart = 0;\n    scrollDistance = 0;\n\nfunction touchStartHandler(event) {\n    touchStart = event.touches[0].pageY;\n}\n\nfunction scrollHandler(event) {\n    scrollDistance = event.deltaY ? event.deltaY : event.touches ? (touchStart - event.touches[0].pageY) : null;\n    touchStart = event.touches ? event.touches[0].pageY : null;\n}\n\n////////////////////////////////////////////////////////////////////////////\n\n// scrollEnabler\n\n////////////////////////////////////////////////////////////////////////////\n\nscrollEnabler = function(event, element) {\n    var elementCurrentScroll = element.scrollTop;\n        elementScrollHeight = element.scrollHeight;\n        elementClientHeight = element.clientHeight;\n        fullBodyScroll = elementScrollHeight - elementClientHeight;\n    if (elementCurrentScroll <= fullBodyScroll && elementCurrentScroll >= 0) {\n        element.scrollTop = elementCurrentScroll + scrollDistance;\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n\n// scrollAnimate\n\n////////////////////////////////////////////////////////////////////////////\n\nscrollAnimate = function(screen) {\n\n    var app = document.querySelector('.app-main');\n        screen = app.querySelector(screen);\n        start = screen.querySelector('.start');\n        explore = screen.querySelector('.explore');\n        panelBody = explore.querySelector('.panel-body');\n        barTitleSpan = explore.querySelector('.bar-title').querySelector('span');\n        barSubtitleSpan = explore.querySelector('.bar-subtitle').querySelector('span');\n        originalTitleSpan = barTitleSpan.innerHTML;\n        originalSubtitleSpan = barSubtitleSpan.innerHTML;\n        panelScroll = 0;\n        panelIsFullyScrolledUp = true;\n        currentRatio = 0;\n        panelCurrentScroll = 0;\n        checked = false;\n        exploreTop = 0;\n        measureIndex = app.querySelector('.measure-index');\n        measureIndexB = app.querySelector('.measure-index-b');\n\n    fetchVariables = function() {\n        var exploreBoundingTop = explore.getBoundingClientRect().top;\n            screenBoundingTop = screen.getBoundingClientRect().top;\n            exploreTop = exploreBoundingTop - screenBoundingTop;\n            originalExploreTop = exploreTop;\n    }\n\n    window.addEventListener('resize', function(event) {\n        explore.removeAttribute('style');\n        start.removeAttribute('style');\n        fetchVariables();\n        if (checked == true) {\n            explore.style.top = 0;\n            exploreTop = 0;\n        }\n    });\n\n    screen.addEventListener('wheel', function(event) {\n        scrollHandler(event);\n        scrollAnimation(event);\n    });\n\n    screen.addEventListener('touchmove', function(event) {\n        scrollHandler(event);\n        scrollAnimation(event);\n    });\n\n    screen.addEventListener('touchstart', touchStartHandler);\n\n    function scrollAnimation(event) {\n        measureIndex.style.top = (100 * (1 - currentRatio)) + '%';\n        panelCurrentScroll = panelBody.scrollTop;\n        panelIsFullyScrolledUp = panelCurrentScroll == 0;\n\n        if (panelIsFullyScrolledUp) {\n            expectedScroll = exploreTop + -scrollDistance;\n            exploreTop = (expectedScroll >= originalExploreTop) ? originalExploreTop : (expectedScroll <= 0) ? 0 : (exploreTop + -scrollDistance);\n            explore.style.top = exploreTop + 'px';\n            currentRatio = Math.round(100 * (exploreTop / originalExploreTop)) / 100;\n            start.style.opacity = currentRatio;\n        }\n\n        if (exploreTop == 0) {\n            checked = true;\n            app.classList.add('activated');\n            barTitleSpan.innerHTML = 'overview';\n            barSubtitleSpan.innerHTML = 'down';\n            scrollEnabler(event, panelBody);\n            var currentScroll = panelBody.scrollTop / (panelBody.scrollHeight - panelBody.clientHeight);\n            measureIndexB.style.top = (100 * currentScroll) + '%';\n        } else if (exploreTop == originalExploreTop) {\n            checked = false;\n            app.classList.remove('activated');\n            barTitleSpan.innerHTML = originalTitleSpan;\n            barSubtitleSpan.innerHTML = originalSubtitleSpan;\n        }\n    }\n\n    fetchVariables();\n\n}\n\n////////////////////////////////////////////////////////////////////////////\n\n// dockToggler\n\n////////////////////////////////////////////////////////////////////////////\n\n\n\ndockToggler = function() {\n    var app = document.querySelector('.app-main');\n        tools = app.querySelectorAll('.tool-swatch');\n        dock = app.querySelector('.panel-dock');\n        screen = app.querySelector('[class*=screen-]');\n        currentSwatch = undefined;\n        toolsArray = [];\n        previous = undefined;\n        docked = false;\n        swatches = ['cyan', 'magenta', 'yellow', 'black'];\n        swatch = undefined;\n\n    for (var i = 0; i < tools.length; i++) {\n        var tool = tools[i];\n        tool.addEventListener('click', function() {\n            for (var i = 0; i < tools.length; i++) {\n                if(this.isSameNode(tools[i])) {\n                    swatch = swatches[i];\n                }\n            }\n            if (docked) {\n                if(!this.isSameNode(previous)) {\n                    app.classList.remove(previousSwatch);\n                    app.classList.add(swatch);\n                    for (var k = 0; k < tools.length; k++) {\n                        tools[k].classList.remove('activated');\n                        this.classList.add('activated');\n                    }\n                } else {\n                    this.classList.remove('activated');\n                    app.classList.remove('docked');\n                    docked = false;\n                    app.removeAttribute('style');\n                    screen.classList.remove('hidden');\n                    dock.classList.remove('visible');\n                    app.classList.remove(swatch);\n                }\n            } else {\n                this.classList.add('activated');\n                app.classList.add('docked');\n                dock.classList.add('visible');\n                docked = true;\n                screen.classList.add('hidden');\n                app.removeAttribute('style');\n                app.classList.add(swatch);\n            }\n            previous = this;\n            previousSwatch = swatch;\n        });\n    }\n}\n\ndockToggler();\n\n////////////////////////////////////////////////////////////////////////////\n\n// responsiveImages\n\n////////////////////////////////////////////////////////////////////////////\n\nresponsiveImages = function(cardName) {\n    var dppi = window.devicePixelRatio;\n        cards = document.getElementsByClassName(cardName);\n        status = 'all';\n        currentImg = null;\n        prevImgWidth = 0;\n        scrollContainer = document.querySelector('.panel-body');\n        scrollPosition = 0;\n\n    finish = function(cardImg) {\n        setTimeout(function() {\n            cardImg.classList.remove('deactivated');\n        }, 1000)\n    }\n\n    loadImage = function(cardImg, otherCardImgs) {\n        var imgWidth = Math.ceil(parseInt(getComputedStyle(cardImg, null).getPropertyValue('width'), 10));\n        if (imgWidth != prevImgWidth) { // Skip the image transormation if it is the same size as the prior\n            var newWidth = imgWidth * dppi;\n            if (cardImg.dataset.src) {\n                var imgSrc = cardImg.dataset.src;\n                var srcParse = imgSrc.split('upload/');\n                for (var j = 0; j < srcParse.length; j++) {\n                    var srcFirst = srcParse[0];\n                    var srcLast = srcParse[1];\n                    var srcType = srcLast.split('.')[1];\n                    if(srcType === 'jpg') {\n                        var imgSrc = srcFirst + 'upload/w_' + newWidth + '/' + srcLast;\n                    }\n                    cardImg.src = imgSrc;\n                }\n            }\n        } else {\n            finish(cardImg);\n            for (var k = 0; k < otherCardImgs.length; k++) {\n                finish(otherCardImgs[k]);\n            }\n        }\n    }\n\n    hoverReplicate = function() {\n        for (var i = 0; i < cards.length; i++) {\n            var card = cards[i];\n            if(card.classList.contains('hover')) {\n                card.classList.toggle('hover');\n            }\n        }\n        this.classList.toggle('hover');\n    }\n\n    queryMedia = function(cardImg, otherCardImgs) {\n        if (status === 'all') {\n            for (var i = 0; i < cards.length; i++) {\n                var card = cards[i];\n                var cardImg = card.querySelector('img');\n                cardImg.classList.add('deactivated');\n                loadImage(cardImg, otherCardImgs);\n            }\n        } else if (status === 'single') {\n            cardImg.classList.add('deactivated');\n            loadImage(cardImg, otherCardImgs);\n        }\n    }\n\n    toggleMedia = function(card, cardImg, cardParent, otherCards, otherCardImgs) {\n        prevImgWidth = Math.ceil(parseInt(getComputedStyle(cardImg, null).getPropertyValue('width'), 10));\n        if (!cardParent.classList.contains('activated')) {\n            scrollPosition = scrollContainer.scrollTop;\n        }\n        for (var i = 0; i < otherCards.length; i++) {\n            otherCards[i].parentNode.classList.toggle('deactivated');\n            otherCards[i].classList.add('deactivated');\n        }\n        cardParent.classList.toggle('activated');\n        card.querySelector('.tool-shrink').classList.toggle('deactivated');\n        if (status === 'all') {\n            status = 'single';\n            currentImg = cardImg;\n        } else if (status === 'single') {\n            status = 'all';\n            currentImg = null;\n        }\n        for (var k = 0; k < otherCardImgs.length; k++) {\n            otherCardImgs[k].classList.add('deactivated');\n        }\n        if (!cardParent.classList.contains('activated')) {\n            scrollContainer.scrollTop = scrollPosition;\n        } else {\n            scrollContainer.scrollTop = 0;\n        }\n        queryMedia(cardImg, otherCardImgs);\n    }\n\n    for (var i = 0; i < cards.length; i++) {\n        (function() {\n            var card = cards[i];\n            var otherCards = [];\n            var otherCardImgs = [];\n            for (var j = 0; j < cards.length; j++) {\n                if (!cards[j].isSameNode(card)) {\n                    otherCards.push(cards[j]);\n                    var otherCardImg = cards[j].querySelector('img');\n                    if (otherCardImg) {\n                        otherCardImgs.push(otherCardImg);\n                    }\n                }\n            }\n            var cardImg = card.querySelector('img');\n            var cardParent = card.parentNode;\n            var toolExpand = card.querySelector('.tool-expand');\n            var toolShrink = card.querySelector('.tool-shrink');\n            var tools = [];\n            if (toolExpand && toolShrink) {\n                tools.push(toolExpand, toolShrink);\n            }\n            if (cardImg) {\n                cardImg.addEventListener('load', function() {\n                    finish(cardImg);\n                    for (var k = 0; k < otherCardImgs.length; k++) {\n                        finish(otherCardImgs[k]);\n                    }\n                });\n            }\n            card.addEventListener('touchstart', hoverReplicate);\n            if (tools) {\n                for(var t = 0; t < tools.length; t++) {\n                    var tool = tools[t];\n                    tool.addEventListener('click', function() {\n                        toggleMedia(card, cardImg, cardParent, otherCards, otherCardImgs);\n                    });\n                }\n            }\n        })();\n    }\n\n    window.addEventListener('resize', function() {\n        queryMedia(currentImg);\n    });\n\n    queryMedia(status);\n}\n"]}