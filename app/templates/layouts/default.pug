include ../mixins/flash-messages
include ../mixins/media/lightswitch

doctype html
html
    head
        //- Initial HTML configuration
        meta(charset="utf-8")
        meta(http-equiv="X-UA-Compatible" content="IE=edge")
        //- Link meta-data
        title #{global.meta.description}
        meta(name="description" content=global.meta.description)
        //- Define the viewport
        meta(name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0")
        meta(name="apple-mobile-web-app-title" content=global.meta.title)
        //- Fullscreen Safari on startup from home screen on Apple and Android devices
        //- meta(name="apple-mobile-web-app-capable" content="yes")
        //- meta(name="mobile-web-app-capable" content="yes")
        //- Link browser favicon
        link(rel="icon" type="image/png" href=global.favicon.url)
        //- Link home screen app icon on Apple devices
        link(rel="apple-touch-icon" href=global.icon.url)
        //- Link startup image on Apple devices
        link(rel="apple-touch-startup-image" href=global.startupImg.url)
        //- Link Sassafras project styles
        link(rel="stylesheet" type="text/css" href="/css/jacobsfletch.min.css")
        if user && user.canAccessKeystone
            link(href="/keystone/styles/content/editor.min.css" rel="stylesheet")
        block css
        block head
    body
        block intro
        input#dock(type='checkbox')
        input#explore(type='checkbox')
        input#filter(type='checkbox')
        input#portfolio(type='checkbox')
        input#grid-on(name="grid" type='radio' checked)
        input#grid-off(name="grid" type='radio')
        .app-main
            header.app-header
                .wrapper
                    a.app-title(href='/')
                        h1 jacobsfletch
                    label.tool-toggle(for='dock')
                        .tool-media
                            +lightSwitch()
            footer.app-footer
                .container-dock
                    .container-header
                        .container-title
                            p this website is 100% handmade
                    .container-body
                        nav.menu-vertical
                            ul.menu-body
                                each link in navLinks
                                    li.menu-body-part.btn-main(class=(section == link.key ? 'active' : null))
                                        a.btn-title(target=link.target href=link.href)= link.label
                                            |  >
                        nav.menu-vertical
                            .menu-header
                                .menu-title
                                    h6 coming soon
                            ul.menu-body
                                li.menu-body-part.btn-main
                                    a.btn-title my blog
                                li.menu-body-part.btn-main
                                    a.btn-title my shop
            .app-body
                block appBody

        // JS includes
        // script(src='/js/jacobsfletch.min.js')

        block js
            script.
                (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
                (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
                m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
                })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
                ga('create', 'UA-72591985-3', 'auto');
                ga('send', 'pageview');

                scrollAnimate = function(selector, parent, input) {
                    var panel = document.getElementById(selector);
                    var originalOffset = panel.offsetTop;
                    var loaderTitle = document.getElementById("loaderTitle");
                    var panelBackground = document.getElementById(parent);
                    var circle = document.getElementById("circle");
                    var loaderContainer = document.getElementById("loaderContainer");

                    window.addEventListener("wheel", moveHandler, false);
                    window.addEventListener("touchstart", startHandler, false);
                    window.addEventListener("touchmove", moveHandler, false);
                    window.addEventListener("touchend", endHandler, false);

                    var originalOffset = panel.offsetTop;
                    var desktopThreshold = 300;
                    var mobileThreshold = 66;
                    var touchDistance = 0;
                    var wheelDistance = 0;
                    var currentPercentage = 0;
                    var displacement = 0;
                    var wheelRatio = 1;
                    var touchRatio = 3;
                    var start = 0;
                    var timeout = 1000;
                    var elapsedTime = 0;
                    var strokeWidth = parseInt(getComputedStyle(panelLoader).getPropertyValue("stroke-width"), 10) * 2; // Parse Two Decimals In, Double to Accomodate Both Sides of Circle
                    var loaderWidth = parseInt(getComputedStyle(panelLoader).getPropertyValue("width"), 10); // Parse Two Decimals In
                    var panelHeight = parseInt(getComputedStyle(panelBackground).getPropertyValue("height"), 10); // Parse Two Decimals In
                    var deltaY = 0;

                    function timer() {
                        reset();
                    }

                    function reset() {
                        panel.style.top = ""; // Reset Panel offsetTop
                        panelLoader.style.display = ""; // Remove Loader
                        loaderContainer.style.cssText = ""; // Remove Loader
                        panelBackground.style.display = ""; // Reset Background
                        loaderTitle.innerHTML = ""; // Remove Subtitle
                        circle.style.strokeDasharray = ""; // Reset dash-array
                        circle.style.strokeDashoffset = ""; // Reset dash-offset
                        loaderContainer.style.height = ""; // Reset Loader Container Height
                        panel.style.transition = ""; // Reset Panel Position
                        wheelDistance = 0; // Reset wheelDistance
                        deltaY = 0; // Reset FireFox Delta
                    }

                    function initSpinner(currentPercentage, displacement) {
                        array = (loaderWidth - strokeWidth) * Math.PI; // Calculate Loader Circumference
                        currentRatio = 1 - (currentPercentage / 100); // Calculate Ratio Difference
                        circle.style.strokeDasharray = array; // Style dash-array
                        circle.style.strokeDashoffset = array * currentRatio; // Style dash-offset
                        loaderContainer.style.height = parseInt(loaderContainer.offsetHeight, 10) - displacement + "px";
                    }

                    function startHandler(event) {
                        start = event.touches[0].pageY;
                    }

                    function moveHandler(event) {
                        checkbox = document.getElementById(input); // The Checkbox
                        if(!checkbox.checked) { // Checkbox Unchecked
                            if(event.touches) { // Touch Event
                                touchDistance = (start - event.touches[0].pageY); // Scroll Amount
                                currentPercentage = Math.floor((touchDistance / mobileThreshold) * 100); // Calculate Respective Percentage
                                displacement = touchDistance * touchRatio; // Integrate Ratio
                                currentOffset = (originalOffset - displacement); // Calculate Offset
                            }
                            if(event.wheelDeltaY || event.deltaY) { // Wheel Event
                                wheelDelta = event.wheelDeltaY || event.deltaY; // Conditional Variable to Accomodate FireFox
                                if(event.wheelDeltaY) { // If Not Firefox
                                    wheelDistance = wheelDistance + (wheelDelta * -1); // Calculate Wheel Distance
                                } else { // If Firefox
                                    deltaY = deltaY + wheelDelta; // Delta Ticker
                                    wheelDistance = deltaY * 10; // Multiply by a Number - FireFox Increments by Only One
                                }
                                currentPercentage = Math.floor((wheelDistance / desktopThreshold) * 100); // Calculate Respective Percentage
                                displacement = wheelDistance * wheelRatio; // Integrate Ratio
                                currentOffset = (originalOffset - (wheelDistance * wheelRatio)); // Calculate Offset
                                if(currentPercentage <= 0) { // If Fully Scrolled Down
                                    reset(); // Reset Styles
                                }
                            }
                            if(currentPercentage > 0) { // If Not Fully Scrolled Down
                                panel.style.transition = "none";
                                loaderTitle.innerHTML = "<p>" + currentPercentage + "%</p>"; // Start Percentage Count
                                if(currentPercentage < 100) { // Threshold Not Met
                                    panel.style.top = currentOffset + "px"; // Animate Panel
                                    panelBackground.style.display = "none"; // Remove Background
                                    loaderContainer.style.cssText = "display: flex; display: -webkit-flex;"; // Insert Display Style
                                    initSpinner(currentPercentage, displacement);
                                } else { // Threshold Met
                                    checkbox.checked = true; // Check Checkbox
                                    reset(); // Reset Styles
                                }
                            }
                        }
                    }

                    function endHandler(event) { // End of Event
                        if(!checkbox.checked) { // Checkbox Unchecked
                            reset(); // Reset Styles
                        }
                    }

                }

        block pageJs
